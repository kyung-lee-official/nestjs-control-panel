model PerformanceStat {
    id           Int           @id @default(autoincrement())
    owner        Member        @relation(fields: [ownerId], references: [id])
    ownerId      String
    month        DateTime
    statSections StatSection[]
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @updatedAt
}

model StatSection {
    id           Int             @id @default(autoincrement())
    stat         PerformanceStat @relation(fields: [statId], references: [id])
    statId       Int
    weight       Int
    title        String
    description  String?
    memberRole   MemberRole      @relation(fields: [memberRoleId], references: [id])
    memberRoleId String
    events       Event[]
    createdAt    DateTime        @default(now())
    updatedAt    DateTime        @updatedAt
}

model EventTemplate {
    id           Int        @id @default(autoincrement())
    score        Float
    description  String
    memberRole   MemberRole @relation(fields: [memberRoleId], references: [id])
    memberRoleId String
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @updatedAt
}

// event is independent of event template, and should keep a snapshot of the template at the time of creation, instead of a reference
// custom events are allowed, in which case the templateId will be null
model Event {
    id                  Int            @id @default(autoincrement())
    templateId          Int?
    templateScore       Float?
    templateDescription String?
    section             StatSection    @relation(fields: [sectionId], references: [id])
    sectionId           Int
    approval            ApprovalType   @default(PENDING)
    score               Float
    amount              Int
    description         String
    attachments         String[]
    comments            EventComment[]
    createdAt           DateTime       @default(now())
    updatedAt           DateTime       @updatedAt
}

enum ApprovalType {
    PENDING
    APPROVED
    REJECTED
}

model EventComment {
    id        Int      @id @default(autoincrement())
    event     Event    @relation(fields: [eventId], references: [id])
    eventId   Int
    memberId  String
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
